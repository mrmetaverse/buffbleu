/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["components_mobile-controls_js"],{

/***/ "./components/mobile-controls.js":
/*!***************************************!*\
  !*** ./components/mobile-controls.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("const initMobileControls = ()=>{\n    if ( true && typeof AFRAME !== 'undefined') {\n        AFRAME.registerComponent('mobile-controls', {\n            init: function() {\n                if (!AFRAME.utils.device.isMobile()) return; // Only run on mobile\n                this.touchStartX = 0;\n                this.touchStartY = 0;\n                this.moving = false;\n                this.speed = 0.15;\n                // Create D-pad UI\n                const dpad = document.createElement('div');\n                dpad.id = 'mobile-dpad';\n                dpad.style.cssText = \"\\n          position: fixed;\\n          bottom: 20px;\\n          left: 20px;\\n          width: 150px;\\n          height: 150px;\\n          background: rgba(255, 255, 255, 0.3);\\n          border-radius: 50%;\\n          z-index: 9999;\\n          touch-action: none;\\n        \";\n                document.body.appendChild(dpad);\n                // Touch handlers for D-pad\n                dpad.addEventListener('touchstart', this.onTouchStart.bind(this));\n                dpad.addEventListener('touchmove', this.onTouchMove.bind(this));\n                dpad.addEventListener('touchend', this.onTouchEnd.bind(this));\n                // Pinch zoom handlers\n                document.addEventListener('touchstart', this.onPinchStart.bind(this));\n                document.addEventListener('touchmove', this.onPinchMove.bind(this));\n            },\n            onTouchStart: function(evt) {\n                evt.preventDefault();\n                const touch = evt.touches[0];\n                this.touchStartX = touch.clientX;\n                this.touchStartY = touch.clientY;\n                this.moving = true;\n            },\n            onTouchMove: function(evt) {\n                if (!this.moving) return;\n                evt.preventDefault();\n                const touch = evt.touches[0];\n                const deltaX = touch.clientX - this.touchStartX;\n                const deltaY = touch.clientY - this.touchStartY;\n                // Calculate movement direction\n                const rotation = this.el.object3D.rotation.y;\n                const moveX = Math.sin(rotation) * deltaY * this.speed + Math.cos(rotation) * deltaX * this.speed;\n                const moveZ = Math.cos(rotation) * deltaY * this.speed - Math.sin(rotation) * deltaX * this.speed;\n                // Update position\n                this.el.object3D.position.x += moveX * 0.01;\n                this.el.object3D.position.z += moveZ * 0.01;\n            },\n            onTouchEnd: function() {\n                this.moving = false;\n            },\n            onPinchStart: function(evt) {\n                if (evt.touches.length !== 2) return;\n                const touch1 = evt.touches[0];\n                const touch2 = evt.touches[1];\n                this.pinchDistance = Math.hypot(touch2.clientX - touch1.clientX, touch2.clientY - touch1.clientY);\n            },\n            onPinchMove: function(evt) {\n                if (evt.touches.length !== 2) return;\n                const touch1 = evt.touches[0];\n                const touch2 = evt.touches[1];\n                const newDistance = Math.hypot(touch2.clientX - touch1.clientX, touch2.clientY - touch1.clientY);\n                if (this.pinchDistance) {\n                    const delta = newDistance - this.pinchDistance;\n                    this.el.object3D.position.z += delta * 0.01;\n                }\n                this.pinchDistance = newDistance;\n            }\n        });\n    }\n};\nif (true) {\n    if (typeof AFRAME !== 'undefined') {\n        initMobileControls();\n    } else {\n        window.addEventListener('aframe-loaded', initMobileControls);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/mobile-controls.js\n"));

/***/ })

}]);