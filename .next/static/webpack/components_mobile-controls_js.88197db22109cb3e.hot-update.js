/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_mobile-controls_js",{

/***/ "./components/mobile-controls.js":
/*!***************************************!*\
  !*** ./components/mobile-controls.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("const initMobileControls = ()=>{\n    if ( true && typeof AFRAME !== 'undefined') {\n        // Load nipplejs dynamically\n        const script = document.createElement('script');\n        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/nipplejs/0.10.1/nipplejs.min.js';\n        script.async = true;\n        document.head.appendChild(script);\n        script.onload = ()=>{\n            AFRAME.registerComponent('mobile-controls', {\n                init: function() {\n                    if (!AFRAME.utils.device.isMobile()) return;\n                    this.camera = this.el;\n                    this.speed = 0.15;\n                    this.moving = false;\n                    // Create left joystick container (movement)\n                    const leftJoystickContainer = document.createElement('div');\n                    leftJoystickContainer.id = 'leftJoystick';\n                    leftJoystickContainer.style.cssText = \"\\n            position: fixed;\\n            bottom: 40px;\\n            left: 40px;\\n            width: 120px;\\n            height: 120px;\\n            z-index: 9999;\\n            touch-action: none;\\n          \";\n                    document.body.appendChild(leftJoystickContainer);\n                    // Create right joystick container (camera)\n                    const rightJoystickContainer = document.createElement('div');\n                    rightJoystickContainer.id = 'rightJoystick';\n                    rightJoystickContainer.style.cssText = \"\\n            position: fixed;\\n            bottom: 40px;\\n            right: 40px;\\n            width: 120px;\\n            height: 120px;\\n            z-index: 9999;\\n            touch-action: none;\\n          \";\n                    document.body.appendChild(rightJoystickContainer);\n                    // Initialize movement joystick (left)\n                    setTimeout(()=>{\n                        this.moveJoystick = nipplejs.create({\n                            zone: document.getElementById('leftJoystick'),\n                            mode: 'static',\n                            position: {\n                                left: '50%',\n                                top: '50%'\n                            },\n                            color: '#241236',\n                            size: 120,\n                            restOpacity: 0.9,\n                            fadeTime: 0,\n                            multitouch: true,\n                            maxNumberOfNipples: 1,\n                            dataOnly: false\n                        });\n                        this.moveJoystick.on('move', (evt, data)=>{\n                            if (!data || !data.angle || !data.force) return;\n                            const rotation = this.camera.object3D.rotation.y;\n                            const position = this.camera.object3D.position;\n                            const force = Math.min(data.force / 50, 0.2);\n                            const angleRad = data.angle.radian;\n                            const moveX = Math.cos(angleRad) * force;\n                            const moveZ = -Math.sin(angleRad) * force;\n                            position.x += moveX * Math.cos(rotation) + moveZ * Math.sin(rotation);\n                            position.z += moveZ * Math.cos(rotation) - moveX * Math.sin(rotation);\n                        });\n                    }, 100);\n                    // Initialize camera joystick (right)\n                    setTimeout(()=>{\n                        this.lookJoystick = nipplejs.create({\n                            zone: document.getElementById('rightJoystick'),\n                            mode: 'static',\n                            position: {\n                                left: '50%',\n                                top: '50%'\n                            },\n                            color: '#241236',\n                            size: 120,\n                            restOpacity: 0.9,\n                            fadeTime: 0,\n                            multitouch: true,\n                            maxNumberOfNipples: 1,\n                            dataOnly: false\n                        });\n                        this.lookJoystick.on('move', (evt, data)=>{\n                            if (!data || !data.angle || !data.force) return;\n                            const sensitivity = 0.002;\n                            const force = Math.min(data.force / 50, 0.2);\n                            const rotation = this.camera.object3D.rotation;\n                            // Update camera rotation based on joystick input\n                            rotation.y -= Math.cos(data.angle.radian) * force * sensitivity * 50;\n                            // Limit vertical look (up/down) to prevent over-rotation\n                            const verticalLook = Math.sin(data.angle.radian) * force * sensitivity * 50;\n                            const newXRotation = rotation.x + verticalLook;\n                            if (newXRotation < Math.PI / 3 && newXRotation > -Math.PI / 3) {\n                                rotation.x = newXRotation;\n                            }\n                        });\n                    }, 100);\n                }\n            });\n        };\n    }\n};\nif (true) {\n    if (typeof AFRAME !== 'undefined') {\n        initMobileControls();\n    } else {\n        window.addEventListener('aframe-loaded', initMobileControls);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/mobile-controls.js\n"));

/***/ })

});