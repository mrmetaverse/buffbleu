/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_aframe-components_js",{

/***/ "./components/aframe-components.js":
/*!*****************************************!*\
  !*** ./components/aframe-components.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// Only run this code on the client side\nif (true) {\n    // Import THREE from A-Frame to use for vector calculations\n    const THREE = AFRAME.THREE;\n    AFRAME.registerComponent('custom-controls', {\n        init: function() {\n            const camera = this.el;\n            let moveForward = false;\n            let moveBackward = false;\n            let moveLeft = false;\n            let moveRight = false;\n            const speed = 0.15;\n            // Create D-pad container\n            const dpadContainer = document.createElement('div');\n            dpadContainer.className = 'dpad-container';\n            const dpad = document.createElement('div');\n            dpad.className = 'dpad';\n            // Create D-pad buttons with icons\n            const buttons = {\n                up: createButton('dpad-up', '↑'),\n                right: createButton('dpad-right', '→'),\n                down: createButton('dpad-down', '↓'),\n                left: createButton('dpad-left', '←')\n            };\n            function createButton(className, icon) {\n                const button = document.createElement('div');\n                button.className = \"dpad-button \".concat(className);\n                button.innerHTML = icon;\n                dpad.appendChild(button);\n                return button;\n            }\n            // Add touch event listeners with prevent default\n            const addTouchListeners = (element, callback)=>{\n                element.addEventListener('touchstart', (e)=>{\n                    e.preventDefault();\n                    callback(true);\n                }, {\n                    passive: false\n                });\n                element.addEventListener('touchend', (e)=>{\n                    e.preventDefault();\n                    callback(false);\n                }, {\n                    passive: false\n                });\n            };\n            addTouchListeners(buttons.up, (val)=>moveForward = val);\n            addTouchListeners(buttons.down, (val)=>moveBackward = val);\n            addTouchListeners(buttons.left, (val)=>moveLeft = val);\n            addTouchListeners(buttons.right, (val)=>moveRight = val);\n            dpadContainer.appendChild(dpad);\n            document.body.appendChild(dpadContainer);\n            // Movement animation\n            this.tick = function() {\n                const rotation = camera.object3D.rotation;\n                const position = camera.object3D.position;\n                // Calculate forward direction based on camera rotation\n                const direction = new THREE.Vector3();\n                camera.object3D.getWorldDirection(direction);\n                if (moveForward) {\n                    position.x += direction.x * speed;\n                    position.z += direction.z * speed;\n                }\n                if (moveBackward) {\n                    position.x -= direction.x * speed;\n                    position.z -= direction.z * speed;\n                }\n                if (moveLeft) {\n                    position.x += Math.cos(rotation.y + Math.PI / 2) * speed;\n                    position.z += Math.sin(rotation.y + Math.PI / 2) * speed;\n                }\n                if (moveRight) {\n                    position.x += Math.cos(rotation.y - Math.PI / 2) * speed;\n                    position.z += Math.sin(rotation.y - Math.PI / 2) * speed;\n                }\n            };\n        }\n    });\n    AFRAME.registerComponent('parking-lot-texture', {\n        init: function() {\n            const canvas = document.getElementById('parkingTexture');\n            if (!canvas) return;\n            const ctx = canvas.getContext('2d');\n            // Set background to white\n            ctx.fillStyle = '#FFFFFF';\n            ctx.fillRect(0, 0, 512, 512);\n            // Draw parking lines\n            ctx.strokeStyle = '#333333';\n            ctx.lineWidth = 4;\n            // Draw straight lines\n            for(let i = 0; i < 512; i += 64){\n                // Vertical lines\n                ctx.beginPath();\n                ctx.moveTo(i, 0);\n                ctx.lineTo(i, 512);\n                ctx.stroke();\n                // Horizontal lines\n                ctx.beginPath();\n                ctx.moveTo(0, i);\n                ctx.lineTo(512, i);\n                ctx.stroke();\n            }\n            // Draw squiggles\n            ctx.strokeStyle = '#222222';\n            ctx.lineWidth = 2;\n            for(let i = 0; i < 10; i++){\n                ctx.beginPath();\n                ctx.moveTo(Math.random() * 512, Math.random() * 512);\n                for(let j = 0; j < 5; j++){\n                    ctx.quadraticCurveTo(Math.random() * 512, Math.random() * 512, Math.random() * 512, Math.random() * 512);\n                }\n                ctx.stroke();\n            }\n        }\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/aframe-components.js\n"));

/***/ })

});